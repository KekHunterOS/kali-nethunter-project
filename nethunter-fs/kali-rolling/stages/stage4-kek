#!/bin/bash

#
# Mini documentation
# 
# CHROOT PATH: $rootfs
#

echo "[!] Adding kekrepo"

rm -rf $rootfs/etc/apt/sources.list

cat << EOF > "$rootfs/etc/apt/sources.list"
# official kali repo
deb http://http.kali.org/kali kali-rolling main contrib non-free

# kekrepo
deb [trusted=yes] https://raw.githubusercontent.com/KekHunterOS/apt-repo/master/ rolling main

# For source package access, uncomment the following line
#deb-src http://http.kali.org/kali kali-rolling main contrib non-free
EOF

echo "[!] Installing and updating some packages"

sleep 1

cat << EOF > "$rootfs/kek"
apt update
apt full-upgrade && apt dist-upgrade
sleep 1
apt-get -o Dpkg::Options::="--force-overwrite" install kali-linux-nethunter mitmf -y
EOF
chmod +x "$rootfs/kek"
chroot_do /kek
sleep 1
rm -rf $rootfs/kek

echo "[!] Doing some post fixes for better experience"

# Coping xstartup to def kali user
cp -f "$rootfs/root/.vnc/xstartup" "$rootfs/kali/.vnc/xstartup"

echo "[!] Creating /kali/.ssh directory for kali user"
mkdir -p "$rootfs/kali/.ssh"

echo "[!] Creating /root/.vnc directory for kali user"
mkdir -p "$rootfs/kali/.vnc"

# Add default xstartup file for tigervnc-standalone-server

cat << EOF >> "$rootfs/etc/skel/.vnc/xstartup"
#!/bin/sh

#############################
##          All            ##
unset SESSION_MANAGER
unset DBUS_SESSION_BUS_ADDRESS
export SHELL=/bin/bash

#############################
##          Gnome          ##
#[ -x /etc/vnc/xstartup ] && exec /etc/vnc/xstartup
#[ -r $HOME/.Xresources ] && xrdb $HOME/.Xresources
#vncconfig -iconic &
#dbus-launch --exit-with-session gnome-session &


############################
##           LXQT         ##
####exec openbox-session
#exec startlxqt


############################
##          KDE           ##
#exec /usr/bin/startkde


############################
##          XFCE          ##
startxfce4 &
EOF

# We should run git clone outside chroot because it has issues with machine-code translation
git clone https://github.com/RfidResearchGroup/proxmark3.git "$rootfs/opt/proxmark3"

# powershell for arm64 is not yet available in Microsofts repos so let's install it manually
if [ $build_arch == "arm64" ]; then
	mkdir -p $rootfs/opt/microsoft/powershell
	wget -P $rootfs/opt/microsoft/powershell https://github.com/PowerShell/PowerShell/releases/download/v6.2.0-preview.4/powershell-6.2.0-preview.4-linux-arm64.tar.gz
	tar -xzf $rootfs/opt/microsoft/powershell/powershell-6.2.0-preview.4-linux-arm64.tar.gz -C $rootfs/opt/microsoft/powershell
	rm $rootfs/opt/microsoft/powershell/powershell-6.2.0-preview.4-linux-arm64.tar.gz
fi

# Microsoft no longer supports deletion of the file DELETE_ME_TO_DISABLE_CONSOLEHOST_TELEMETRY to disable telemetry
# We have to set this environment variable instead

cat << EOF > "$rootfs/etc/profile.d/powershell.sh"
# Microsoft no longer supports deletion of the file DELETE_ME_TO_DISABLE_CONSOLEHOST_TELEMETRY to disable telemetry
# We have to set this environment variable instead

export POWERSHELL_TELEMETRY_OPTOUT=1
EOF

cat << EOF >> "$rootfs/etc/bash.bashrc"
# Microsoft no longer supports deletion of the file DELETE_ME_TO_DISABLE_CONSOLEHOST_TELEMETRY to disable telemetry
# We have to set this environment variable instead

export POWERSHELL_TELEMETRY_OPTOUT=1
EOF

echo "[+] Completed stage 4-kek!"
